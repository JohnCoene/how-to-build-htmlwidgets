system.file("htmlwidgets", package = "gio")
devtools::document()
devtools::load_all()
gio("hello")
devtools::load_all()
devtools::load_all()
gio("useless")
gio("useless", elementId = "globalArea")
devtools::load_all()
gio("useless")
jsonlite::fromJSON('[
{
"e": "CN",
"i": "US",
"v": 3300000
},
{
"e": "CN",
"i": "RU",
"v": 10000
}
]')
jsonlite::fromJSON('[
{
"e": "CN",
"i": "US",
"v": 3300000
},
{
"e": "CN",
"i": "RU",
"v": 10000
}
]') -> x
class(x)
jsonlite::toJSON(x)
jsonlite::toJSON(x, pretty = TRUE)
apply(x, 1, as.list)
x
devtools::load_all()
x
df <- random_data()
head(df)
gio(x)
jsonlite::toJSON(x)
jsonlite::toJSON(x)
?jsonlite::toJSON(x)
jsonlite::toJSON(x, dataframe = "rows")
jsonlite::toJSON(x, dataframe = "columns")
head(cars)
attr(cars, "hello") <- "world"
head(cars)
attributes(cars)
det
devtools::load_all()
x
x
gio(x)
dd <- random_data(15)
gio(dd)
dd <- random_data()
gio(dd)
dd <- random_data(1000)
gio(dd)
dd <- random_data(1000)
gio(dd)
globe <- gio(dd)
class()globe
class(globe)
globe
str(globe)
globe$x
globe$x$style <- "magic"
globe <- gio(dd)
devtools::document()
devtools::load_all()
globe <- gio(dd)
globe
set_style(globe, "magic")
devtools::load_all()
devtools::load_all()
globe <- gio(dd)
globe
set_style(globe, "magic")
usethis::use_pipe()
devtools::document()
devtools::load_all()
gio(dd) %>%
set_style("gorgeousDream")
?shiny::onStop()
globe <- gio(dd)
head(globe$x$data)
library(shiny); runApp('shiny.R')
input$selected_country
devtools::load_all()
runApp('shiny.R')
devtools::load_all()
runApp('shiny.R')
htmlwidgets::shinyRenderWidget
globe <- gio(dd)
globe$x$style
?htmlwidgets::createWidget
?htmlwidgets::sizingPolicy()
gio(dd)
devtools::load_all()
gio(dd)
gio(dd) %>% gio_style("error")
gio(dd) %>% set_style("error")
gio(dd) %>% set_style("default")
